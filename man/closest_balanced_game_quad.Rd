% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/closest_balanced_game_quad.R
\name{closest_balanced_game_quad}
\alias{closest_balanced_game_quad}
\title{Finds the closest balanced game (quadratic formulation)}
\usage{
closest_balanced_game_quad(
  v,
  gamma = rep(1, length(v)),
  vN = v[length(v)],
  positive_game = FALSE,
  epsilon = 1e-08
)
}
\arguments{
\item{v}{A numeric vector of length \eqn{2^n - 1} representing a transferable utility (TU) game.}

\item{gamma}{A non-negative weight vector of the same length as \code{v}. Defaults to uniform weights associated to Euclidean distance.}

\item{vN}{Optional numeric value to fix \eqn{v^*(N)} in the optimization. By default, this value is set to match the value of the original game \code{vN=v[length(v)]}. A valid value is \code{vN = NULL}; in this case, the value of the balanced game for the grand coalition, \eqn{v^*(N)}, is not fixed and is instead optimized within the optimization problem.}

\item{positive_game}{Logical; if \code{TRUE}, enforces \eqn{v^*(S) \ge 0} for all coalitions.}

\item{epsilon}{A small positive scalar (default \code{1e-8}) added to the diagonal of the Hessian to ensure positive definiteness and numerical stability.}
}
\value{
A list with the following components:
\describe{
\item{\code{v_star}}{Numeric vector representing the closest balanced game \eqn{v^*}.}
\item{\code{x_star}}{Numeric vector representing the associated core imputation \eqn{x^*}.}
}
}
\description{
This implements the Goldfarbâ€“Idnani dual algorithm (via \strong{quadprog}) to solve
the following constrained weighted least-squares problem:
\deqn{
\min_{v^*,\, x^*} \sum_{S} \gamma_S\, (v(S) - v^*(S))^2
}
subject to the constraints:
\deqn{
\sum_{i \in N} x^*_i = v^*(N) \quad \text{(efficiency)}
}
\deqn{
\sum_{i \in S} x^*_i \ge v^*(S) \quad \text{for all } S \subsetneq N \quad \text{(coalitional rationality)}
}
Optionally, the following constraints can also be imposed:
\itemize{
\item \eqn{v^*(S) \ge 0} for all coalitions (\code{positive_game}).
\item \eqn{v^*(N) = v_N} to fix the value of the grand coalition (\code{vN}). By default, this value is set to match the value of the original game \eqn{v_N = v(N)}.
}
}
\examples{
v <- c(4,2,1,5,6,3,4)
closest_balanced_game_quad(v)

}
